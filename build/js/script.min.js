new Swiper(".model__image-container",{pagination:{el:".model__pagination",type:"bullets",clickable:!0},loop:!0}),function(){const e=document.querySelectorAll(".device__wire-dote span"),t=document.querySelectorAll(".device__wire-popup-mobile"),n=document.querySelectorAll(".device__wire-popup-close"),s=document.querySelector(".device__wire-popup-overlay");e.forEach((e,n)=>{e.addEventListener("click",()=>{t[n].classList.add("js--show"),s.classList.add("js--show")})}),n.forEach((e,n)=>{e.addEventListener("click",()=>{t[n].classList.remove("js--show"),s.classList.remove("js--show")})}),s.addEventListener("click",()=>{t.forEach(e=>{e.classList.contains("js--show")&&e.classList.remove("js--show")}),s.classList.remove("js--show")})}(),document.getElementById("animation")&&lottie.loadAnimation({container:document.getElementById("animation"),renderer:"svg",loop:!0,autoplay:!0,path:"data.json"}),function(){var e="https://split.daichicloud.ru/brands/all",t="GET",n=200,s=300,o=function(e,t){var o=new XMLHttpRequest;return o.timeout=1e4,o.responseType="json",o.addEventListener("load",(function(){!function(e){return e.status<n||e.status>s}(o)?e(o.response):t("Данные не загрузились. Причина: "+o.status+" "+o.statusText)})),o.addEventListener("error",(function(){t("Произошла ошибка соединения")})),o.addEventListener("timeout",(function(){t("Запрос не успел выполниться за "+o.timeout+"мс")})),o},i=function(e){e.remove()},a=function(e){var t=document.createElement("div");t.style="z-index: 100; margin: 0 auto; text-align: center; background-color: red;",t.style.position="absolute",t.style.left=0,t.style.right=0,t.style.fontSize="30px",t.textContent=e,document.body.insertAdjacentElement("afterbegin",t),window.setTimeout(i,2e3,t)};window.backend={load:function(n,s){var i=o(n,s||a);i.open(t,e),i.send()}}}(),jQuery,function(){const e=document.querySelector(".model-choice__brand-list"),t=document.querySelector(".model-choice__brand-choice");if(!e)return;t.addEventListener("click",()=>{if(!e.classList.contains("show"))return e.classList.add("show"),void t.classList.add("opened");e.classList.contains("show")&&(e.classList.remove("show"),t.classList.remove("opened"))}),document.addEventListener("mousedown",n=>{let s=n.target;s.classList.contains("model-choice__brand-choice")||s.classList.contains("model-choice__brand-item")||s.classList.contains("model-choice__brand-list")||!e.classList.contains("show")||(e.classList.remove("show"),t.classList.remove("opened"))})}(),function(){const e=document.querySelector(".equipment__wrapper"),t=document.querySelector(".equipment__container");if(!e)return;(()=>{let n=document.createDocumentFragment(),s=e.cloneNode(!0);s.className="equipment__slide-wrapper",s.classList.add("swiper-wrapper");let o=document.createElement("div");o.classList.add("equipment__pagination"),o.classList.add("swiper-pagination"),n.appendChild(s),n.appendChild(o),t.appendChild(n),t.querySelectorAll(".equipment__item").forEach(e=>{e.classList.add("swiper-slide")}),new Swiper(".equipment__container",{pagination:{el:".equipment__pagination",type:"bullets"},loop:!0})})()}(),function(){const e=document.querySelector(".process__wrapper"),t=document.querySelector(".process__container");if(!e)return;(()=>{let n=document.createDocumentFragment(),s=e.cloneNode(!0);s.className="process__slide-wrapper",s.classList.add("swiper-wrapper");let o=document.createElement("div");o.classList.add("process__pagination"),o.classList.add("swiper-pagination");let i=document.createElement("div");i.className="process__number",i.textContent=1,n.appendChild(s),n.appendChild(o),n.appendChild(i),t.appendChild(n),t.querySelectorAll(".process__item").forEach(e=>{e.classList.add("swiper-slide")});(e=>{const n=t.querySelector(".process__number");e.on("slideChange",()=>{n.textContent=e.realIndex+1})})(new Swiper(".process__container",{pagination:{el:".process__pagination",type:"bullets"},loop:!0}))})()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
