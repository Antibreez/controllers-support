document.querySelectorAll(".model__link").forEach(e=>{e.addEventListener("click",e=>{console.log(e.target.tagName),"img"===e.target.tagName.toLowerCase()&&e.preventDefault()})}),new Swiper(".model__image-container",{pagination:{el:".model__pagination",type:"bullets",clickable:!0},loop:!0}),function(){const e=document.querySelectorAll(".device__wire-dote span"),t=document.querySelectorAll(".device__wire-popup-mobile"),o=document.querySelectorAll(".device__wire-popup-close"),n=document.querySelector(".device__wire-popup-overlay");if(!e[0])return;e.forEach((e,o)=>{e.addEventListener("click",()=>{t[o].classList.add("js--show"),n.classList.add("js--show")})}),o.forEach((e,o)=>{e.addEventListener("click",()=>{t[o].classList.remove("js--show"),n.classList.remove("js--show")})}),n.addEventListener("click",()=>{t.forEach(e=>{e.classList.contains("js--show")&&e.classList.remove("js--show")}),n.classList.remove("js--show")})}(),document.getElementById("animation")&&lottie.loadAnimation({container:document.getElementById("animation"),renderer:"svg",loop:!0,autoplay:!0,path:"data.json"}),function(){var e="https://split.daichicloud.ru/brands/all",t="GET",o=200,n=300,s=function(e,t){var s=new XMLHttpRequest;return s.timeout=1e4,s.responseType="json",s.addEventListener("load",(function(){!function(e){return e.status<o||e.status>n}(s)?e(s.response):t("Данные не загрузились. Причина: "+s.status+" "+s.statusText)})),s.addEventListener("error",(function(){t("Произошла ошибка соединения")})),s.addEventListener("timeout",(function(){t("Запрос не успел выполниться за "+s.timeout+"мс")})),s},r=function(e){e.remove()},a=function(e){var t=document.createElement("div");t.style="z-index: 100; margin: 0 auto; text-align: center; background-color: red;",t.style.position="absolute",t.style.left=0,t.style.right=0,t.style.fontSize="30px",t.textContent=e,document.body.insertAdjacentElement("afterbegin",t),window.setTimeout(r,2e3,t)};window.backend={load:function(o,n){var r=s(o,n||a);r.open(t,e),r.send()}}}(),jQuery,function(){const e=document.querySelector(".model-choice__brand-list"),t=document.querySelector(".model-choice__brand-choice");if(!e)return;t.addEventListener("click",()=>{if(!e.classList.contains("show"))return e.classList.add("show"),void t.classList.add("opened");e.classList.contains("show")&&(e.classList.remove("show"),t.classList.remove("opened"))}),document.addEventListener("mousedown",o=>{let n=o.target;n.classList.contains("model-choice__brand-choice")||n.classList.contains("model-choice__brand-item")||n.classList.contains("model-choice__brand-list")||!e.classList.contains("show")||(e.classList.remove("show"),t.classList.remove("opened"))})}(),function(){const e=document.querySelector(".equipment__wrapper"),t=document.querySelector(".equipment__container");if(!e)return;(()=>{let o=document.createDocumentFragment(),n=e.cloneNode(!0);n.className="equipment__slide-wrapper",n.classList.add("swiper-wrapper");let s=document.createElement("div");s.classList.add("equipment__pagination"),s.classList.add("swiper-pagination"),o.appendChild(n),o.appendChild(s),t.appendChild(o),t.querySelectorAll(".equipment__item").forEach(e=>{e.classList.add("swiper-slide")}),new Swiper(".equipment__container",{pagination:{el:".equipment__pagination",type:"bullets"},loop:!0})})()}(),function(){const e=document.querySelector(".process__wrapper"),t=document.querySelector(".process__container");if(!e)return;(()=>{let o=document.createDocumentFragment(),n=e.cloneNode(!0);n.className="process__slide-wrapper",n.classList.add("swiper-wrapper");let s=document.createElement("div");s.classList.add("process__pagination"),s.classList.add("swiper-pagination");let r=document.createElement("div");r.className="process__number",r.textContent=1,o.appendChild(n),o.appendChild(s),o.appendChild(r),t.appendChild(o),t.querySelectorAll(".process__item").forEach(e=>{e.classList.add("swiper-slide")});(e=>{const o=t.querySelector(".process__number");e.on("slideChange",()=>{o.textContent=e.realIndex+1})})(new Swiper(".process__container",{pagination:{el:".process__pagination",type:"bullets"},loop:!0}))})()}(),function(){const e=document.querySelector(".add-model__form"),t=document.querySelector("input[name='email']"),o=document.querySelector(".add-model__email-error"),n=document.querySelector("input[name='brand']"),s=document.querySelector(".add-model__brand-error"),r=document.querySelector("input[name='model']"),a=document.querySelector(".add-model__model-error"),i=document.querySelector("input[type='file']"),d=document.querySelector(".add-model__agreement-input"),l=document.querySelector(".add-model__submit"),c=document.querySelector(".add-model__file-progress"),u=document.querySelector(".add-model__bar-current"),m=document.querySelector(".add-model__file-result"),p=document.querySelector(".add-model__file-image"),_=document.querySelector(".add-model__file-name"),v=document.querySelector(".add-model__file-close");if(!t)return;const L=(e,t)=>{e.classList.contains(t)||e.classList.add(t)},h=(e,t)=>{e.classList.contains(t)&&e.classList.remove(t)},w=()=>{t.validity.valid&&""!==n.value&&""!==r.value&&d.checked?l.hasAttribute("disabled")&&l.removeAttribute("disabled"):!l.hasAttribute("disabled")&&l.setAttribute("disabled","")},f=e=>{const t=e.target;L(t,"fill"),""===t.value&&L(t,"mask")},y=e=>{const t=e.target;t.value||h(t,"fill"),h(t,"mask")};t.addEventListener("focus",f),t.addEventListener("blur",y),t.addEventListener("input",e=>{const n=e.target;t.validity.valid||(L(o,"show"),L(t,"error")),t.validity.valid&&(h(n,"error"),h(o,"show")),""===n.value&&L(n,"mask"),""!==n.value&&h(n,"mask"),w()}),n.addEventListener("focus",f),n.addEventListener("blur",y),n.addEventListener("input",e=>{const t=e.target;""===t.value&&(L(t,"mask"),L(t,"error"),L(s,"show")),""!==t.value&&(h(t,"mask"),h(t,"error"),h(s,"show")),w()}),r.addEventListener("focus",f),r.addEventListener("blur",y),r.addEventListener("input",e=>{const t=e.target;""===t.value&&(L(t,"mask"),L(t,"error"),L(a,"show")),""!==t.value&&(h(t,"mask"),h(t,"error"),h(a,"show")),w()}),i.addEventListener("change",e=>{(e=>{if(e.files&&e.files[0]){var t=new FileReader;t.onloadstart=function(e){c.classList.add("show")},t.onprogress=function(e){console.log(Math.round(e.loaded/e.total*100)),u.style.width=Math.round(e.loaded/e.total*100)+"%"},t.onload=function(t){p.setAttribute("src",t.target.result),_.textContent=e.files[0].name,!m.classList.contains("show")&&m.classList.add("show"),c.classList.remove("show"),u.style.width=0},t.readAsDataURL(e.files[0])}})(e.target)}),v.addEventListener("click",()=>{i.value="",/safari/i.test(navigator.userAgent)||(i.type="",i.type="file"),m.classList.remove("show"),_.textContent="",p.removeAttribute("src")}),d.addEventListener("click",()=>{d.checked?h(d,"error"):L(d,"error"),w()}),l.addEventListener("click",t=>{t.preventDefault(),e.submit()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
