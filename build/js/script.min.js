!function(){const e=document.querySelector(".header__placeholder"),t=document.querySelector(".header__search");if(!t)return;const o=()=>{e.classList.contains("hide"),e.classList.add("hide")};t.value&&o(),t.addEventListener("blur",()=>{t.value?o():(e.classList.contains("hide"),e.classList.remove("hide"))})}(),function(){const e=document.querySelectorAll(".model__link"),t=document.querySelectorAll(".model__image-container");new Swiper(".model__swiper-container",{pagination:{el:".model__swiper-container .model__pagination",type:"bullets",clickable:!0},loop:!0}),e[0]&&(e.forEach(e=>{e.addEventListener("mousedown",t=>{let o=!1;const n=()=>{o=!0},s=t=>{o&&t.preventDefault(),o=!1,e.removeEventListener("mousemove",n),e.removeEventListener("mouseup",s)};e.addEventListener("mousemove",n),e.addEventListener("mouseup",s)}),e.addEventListener("toushstart",t=>{let o=!1;const n=()=>{o=!0},s=t=>{o&&t.preventDefault(),o=!1,e.removeEventListener("touchmove",n),e.removeEventListener("touchend",s)};e.addEventListener("touchmove",n),e.addEventListener("touchend",s)})}),t.forEach(e=>{e.querySelectorAll(".model__image").length>1&&e.classList.add("model__swiper-container")}))}(),function(){const e=document.querySelectorAll(".device__model-item"),t=document.querySelectorAll(".device__wire-popup-mobile"),o=document.querySelectorAll(".device__wire-popup-close"),n=document.querySelector(".device__wire-popup-overlay");if(!e[0])return;e.forEach((e,o)=>{e.addEventListener("click",s=>{e.querySelector(".device__model-not-supported")||s.target.classList.contains("device__wire-popup-close")||(t[o].classList.add("js--show"),n.classList.add("js--show"))})}),o.forEach((e,o)=>{e.addEventListener("click",()=>{t[o].classList.remove("js--show"),n.classList.remove("js--show")})}),n.addEventListener("click",()=>{t.forEach(e=>{e.classList.contains("js--show")&&e.classList.remove("js--show")}),n.classList.remove("js--show")})}(),document.getElementById("animation")&&lottie.loadAnimation({container:document.getElementById("animation"),renderer:"svg",loop:!0,autoplay:!0,path:"data.json"}),function(){var e="https://split.daichicloud.ru/brands/all",t="GET",o=200,n=300,s=function(e,t){var s=new XMLHttpRequest;return s.timeout=1e4,s.responseType="json",s.addEventListener("load",(function(){!function(e){return e.status<o||e.status>n}(s)?e(s.response):t("Данные не загрузились. Причина: "+s.status+" "+s.statusText)})),s.addEventListener("error",(function(){t("Произошла ошибка соединения")})),s.addEventListener("timeout",(function(){t("Запрос не успел выполниться за "+s.timeout+"мс")})),s},r=function(e){e.remove()},a=function(e){var t=document.createElement("div");t.style="z-index: 100; margin: 0 auto; text-align: center; background-color: red;",t.style.position="absolute",t.style.left=0,t.style.right=0,t.style.fontSize="30px",t.textContent=e,document.body.insertAdjacentElement("afterbegin",t),window.setTimeout(r,2e3,t)};window.backend={load:function(o,n){var r=s(o,n||a);r.open(t,e),r.send()}}}(),jQuery,function(){const e=document.querySelector(".model-choice__brand-list"),t=document.querySelector(".model-choice__brand-choice");if(!e)return;t.addEventListener("click",()=>{if(!e.classList.contains("show"))return e.classList.add("show"),void t.classList.add("opened");e.classList.contains("show")&&(e.classList.remove("show"),t.classList.remove("opened"))}),document.addEventListener("mousedown",o=>{let n=o.target;n.classList.contains("model-choice__brand-choice")||n.classList.contains("model-choice__brand-item")||n.classList.contains("model-choice__brand-list")||!e.classList.contains("show")||(e.classList.remove("show"),t.classList.remove("opened"))})}(),function(){const e=document.querySelectorAll(".equipment__container");if(!e)return;e.forEach(e=>{let t=document.createDocumentFragment(),o=e.parentNode.querySelector(".equipment__wrapper").cloneNode(!0);o.className="equipment__slide-wrapper",o.classList.add("swiper-wrapper");let n=document.createElement("div");n.classList.add("equipment__pagination"),n.classList.add("swiper-pagination"),t.appendChild(o),t.appendChild(n),e.appendChild(t),e.querySelectorAll(".equipment__item").forEach(e=>{e.classList.add("swiper-slide")}),(e=>{new Swiper(e,{pagination:{el:".equipment__pagination",type:"bullets"},loop:!0})})(e)})}(),function(){const e=document.querySelectorAll(".process__container");if(!e)return;e.forEach(e=>{let t=document.createDocumentFragment(),o=e.parentNode.querySelector(".process__wrapper").cloneNode(!0);o.className="process__slide-wrapper",o.classList.add("swiper-wrapper");let n=document.createElement("div");n.classList.add("process__pagination"),n.classList.add("swiper-pagination");let s=document.createElement("div");s.className="process__number",s.textContent=1,t.appendChild(o),t.appendChild(n),t.appendChild(s),e.appendChild(t),e.querySelectorAll(".process__item").forEach(e=>{e.classList.add("swiper-slide")}),((e,t)=>{const o=t.querySelector(".process__number");e.on("slideChange",()=>{o.textContent=e.realIndex+1})})((e=>new Swiper(e,{pagination:{el:".process__pagination",type:"bullets"},loop:!0}))(e),e)})}(),function(){const e=document.querySelector(".add-model__form"),t=document.querySelector("input[name='email']"),o=document.querySelector(".add-model__email-error"),n=document.querySelector("input[name='brand']"),s=document.querySelector(".add-model__brand-error"),r=document.querySelector("input[name='model']"),a=document.querySelector(".add-model__model-error"),i=document.querySelector("input[type='file']"),d=document.querySelector(".add-model__agreement-input"),l=document.querySelector(".add-model__submit"),c=document.querySelector(".add-model__file-progress"),u=document.querySelector(".add-model__bar-current"),m=document.querySelector(".add-model__file-label"),p=document.querySelector(".add-model__file-wrap"),v=document.querySelector(".add-model__file-result"),_=document.querySelector(".add-model__file-image"),h=document.querySelector(".add-model__file-name"),f=document.querySelector(".add-model__file-close");if(!t)return;function L(e){e.preventDefault(),e.stopPropagation()}function g(e){m.classList.add("highlight")}function w(e){m.classList.remove("highlight")}function L(e){e.preventDefault(),e.stopPropagation()}["dragenter","dragover","dragleave","drop"].forEach(e=>{p.addEventListener(e,L,!1)}),["dragenter","dragover"].forEach(e=>{p.addEventListener(e,g,!1)}),["dragleave","drop"].forEach(e=>{p.addEventListener(e,w,!1)}),p.addEventListener("drop",(function(e){let t=e.dataTransfer.files;i.files&&i.files[0]&&(i.value="",/safari/i.test(navigator.userAgent)||(i.type="",i.type="file"),v.classList.remove("show"),h.textContent="",_.removeAttribute("src"));i.files=t,k()}),!1);const y=(e,t)=>{e.classList.contains(t)||e.classList.add(t)},E=(e,t)=>{e.classList.contains(t)&&e.classList.remove(t)},q=()=>{t.validity.valid&&""!==n.value&&""!==r.value&&d.checked?l.hasAttribute("disabled")&&l.removeAttribute("disabled"):!l.hasAttribute("disabled")&&l.setAttribute("disabled","")},S=e=>{const t=e.target;y(t,"fill"),""===t.value&&y(t,"mask")},b=e=>{const t=e.target;t.value||E(t,"fill"),E(t,"mask")},k=()=>{(e=>{if(e.files&&e.files[0]){var t=new FileReader;t.onloadstart=function(e){c.classList.add("show")},t.onprogress=function(e){console.log(Math.round(e.loaded/e.total*100)),u.style.width=Math.round(e.loaded/e.total*100)+"%"},t.onload=function(t){_.setAttribute("src",t.target.result),h.textContent=e.files[0].name,!v.classList.contains("show")&&v.classList.add("show"),c.classList.remove("show"),u.style.width=0},t.readAsDataURL(e.files[0])}})(i)};t.addEventListener("focus",S),t.addEventListener("blur",b),t.addEventListener("input",e=>{const n=e.target;t.validity.valid||(y(o,"show"),y(t,"error")),t.validity.valid&&(E(n,"error"),E(o,"show")),""===n.value&&y(n,"mask"),""!==n.value&&E(n,"mask"),q()}),n.addEventListener("focus",S),n.addEventListener("blur",b),n.addEventListener("input",e=>{const t=e.target;""===t.value&&(y(t,"mask"),y(t,"error"),y(s,"show")),""!==t.value&&(E(t,"mask"),E(t,"error"),E(s,"show")),q()}),r.addEventListener("focus",S),r.addEventListener("blur",b),r.addEventListener("input",e=>{const t=e.target;""===t.value&&(y(t,"mask"),y(t,"error"),y(a,"show")),""!==t.value&&(E(t,"mask"),E(t,"error"),E(a,"show")),q()}),i.addEventListener("change",k),f.addEventListener("click",()=>{i.value="",/safari/i.test(navigator.userAgent)||(i.type="",i.type="file"),v.classList.remove("show"),h.textContent="",_.removeAttribute("src")}),d.addEventListener("click",()=>{d.checked?E(d,"error"):y(d,"error"),q()}),l.addEventListener("click",t=>{t.preventDefault(),e.submit()})}(),function(){const e=$(".device__warning-icon"),t=$(".device__stroke-chip"),o=$(".device__stroke-popup"),n=$(".device__warning-popup");e.on("mouseenter",(function(){const e=$(this).next();e.offset().left+e.outerWidth()-$(window).outerWidth()>0&&e.css("transform","translateX(calc(-100% + 40px))")})),e.on("mouseleave",(function(){$(this).next().css("transform","")})),t.on("click",(function(){$(this).next().addClass("opened")})),o.on("click",(function(e){($(e.target).hasClass("device__stroke-popup")||$(e.target).hasClass("device__stroke-popup-close")||$(e.target).parents(".device__stroke-popup-close").length>0)&&$(this).removeClass("opened")})),e.on("click",(function(){$(this).next().addClass("opened")})),n.on("click",(function(e){($(e.target).hasClass("device__warning-popup")||$(e.target).hasClass("device__stroke-popup-close")||$(e.target).parents(".device__stroke-popup-close").length>0)&&$(this).removeClass("opened")}));new Swiper(".model__image-container",{pagination:{el:".model__image-container .model__pagination",type:"bullets",clickable:!0},loop:!0})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
